name: Build bcm2712 RPi 5B
on: [push]

jobs:
    build:
        name: Build Raspberry Pi 5 images
        runs-on: ubuntu-latest

        steps:
            - name: Setup Ubuntu
              run: |
                sudo apt update
                sudo apt install -y python3 python3-pip python3-ply python3-distutils python3-pyelftools libpython3-dev swig
            - name: Maximize build space
              uses: AdityaGarg8/remove-unwanted-software@v1
              with:
                remove-android: 'true'
                remove-dotnet: 'true'
            - name: Checkout
              uses: actions/checkout@v3

            - name: Build
              run: |
                ./scripts/feeds update -a
                ./scripts/feeds install -a
                cd feeds/luci
                wget https://gist.githubusercontent.com/mj22226/f6db007367a22a31f9cb1c109a032b45/raw/be368c4f1605f652a001d81548c3a3e14adf6cb7/luci-app-diskman.patch
                git apply luci-app-diskman.patch
                cd -
                cd  feeds/packages
                wget https://gist.githubusercontent.com/mj22226/351f11e66f08f06e37a985719a31ddb4/raw/b35ba7a3aac1949bd6bbeaad065a0a93dc3c34f0/01-cpu.patch

                git apply  01-cpu.patch

                cd -
                sed -i "70s/'0'/'1'/" feeds/luci/applications/luci-app-statistics/root/etc/config/luci_statistics
                sed -i "83s/'0'/'1'/" feeds/luci/applications/luci-app-statistics/root/etc/config/luci_statistics
                sed -i "194s/'0'/'1'/" feeds/luci/applications/luci-app-statistics/root/etc/config/luci_statistics
                sed -i "211s/'0'/'1'/" feeds/luci/applications/luci-app-statistics/root/etc/config/luci_statistics
                sed -i "13s/'1'/'0'/" feeds/packages/utils/dockerd/files/etc/config/dockerd
                sed -i 's/default n/default y/g' feeds/packages/utils/dockerd/Config.in
                ./scripts/feeds update -a
                ./scripts/feeds install -a -f
                cp .github/workflows/config.buildinfo1 .config
                make defconfig
                wget https://gist.githubusercontent.com/mj22226/23edc25efeb65ef69d8eb6598f4f8179/raw/29c862e3e2558852523f4e8edd5f3d0cc145067e/01-key.patch
                git apply 01-key.patch
                make download -j32
                rm 01-key.patch
                sed -i '129d' package/base-files/Makefile
                sed -i '135d' package/base-files/Makefile
                mkdir -p files/www/repo
                wget https://gist.githubusercontent.com/mj22226/681178b344f588b4625a7f83febd9131/raw/73ff0c720a0eefb99fe086ec2d715e0052976df0/03.patch
                git apply 03.patch
                make -j$(nproc) 'IGNORE_ERRORS=n m'
                cp -R bin/targets/bcm27xx/bcm2712/packages/ files/www/repo/
                make -j$(nproc) 'IGNORE_ERRORS=n m'
                tar -cvf bcm27xx-images.tar bin/targets/bcm27xx/bcm2712

            - name: Upload artifacts
              uses: actions/upload-artifact@v3
              with:
                name: bcm27xx-images
                path: bcm27xx-images.tar

    release:
          name: Make a release
          runs-on: ubuntu-latest
          needs: build

          steps:
            - name: Download the image artifacts
              uses: actions/download-artifact@v3
              with:
                name: bcm27xx-images

            - name: Extract the image artifacts
              run: tar xf bcm27xx-images.tar

            - name: Create a release
              uses: "marvinpinto/action-automatic-releases@latest"
              with:
                repo_token: "${{ secrets.GITHUB_TOKEN }}"
                prerelease: true
                title: "Raspberry Pi 5 Firmware Images"
                automatic_release_tag: "bcm2712-6.1"
                files: bin/targets/bcm27xx/bcm2712/*
